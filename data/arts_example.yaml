# 图片拉取代理地址
https_proxy: "http://127.0.0.1:7890"

# HTTP 端口（用于refresh）
http:
  host: "127.0.0.1"
  port: 8000

# 检查冷却时间（秒）
cooldown: 30

# 推送时显示像素修改条数（多的会被省略）
diff:
  max_points: 10

# napcat配置
napcat:
  base_url: "http://127.0.0.1:3000"   # http服务器地址（留空则不推送）
  access_token: ""                    # 可留空
  target_type: group                  # group/private
  id: 123456789                       # 群号或QQ号

# 要监控的像素画
arts:
  example1: 
    name: "example A" #用于输出和推送的画名
    track: true       #启用开关
    api_image: "https://backend.wplace.live/files/s0/tiles/Tl X/Tl Y.png" #图片地址 可以手动拼接（将网站中显示的像素坐标中的Tl X和Tl Y值替换左边实例地址中的Tl X和Tl Y），或者wplace.live下F12找到画所在的图片地址
    start_coords: { x: 100, y: 200 } #起始坐标（即网站中显示的像素坐标中的X和Y值，也是监控矩形的左上角，建议比需要监控的画大1-2像素）
    end_coords:   { x: 132, y: 228 } #结束坐标（即网站中显示的像素坐标中的X和Y值，也是监控矩形的右下角，建议比需要监控的画大1-2像素）

  example2:
    name: "example B" #用于输出和推送的画名
    track: true       #启用开关
    api_image: "https://backend.wplace.live/files/s0/tiles/Tl X/Tl Y.png" #图片地址 可以手动拼接（将网站中显示的像素坐标中的Tl X和Tl Y值替换左边实例地址中的Tl X和Tl Y），或者wplace.live下F12找到画所在的图片地址
    start_coords: { x:   0, y:  0 } #起始坐标（即网站中显示的像素坐标中的X和Y值，也是监控矩形的左上角，建议比需要监控的画大1-2像素）
    end_coords:   { x:  64, y: 64 } #结束坐标（即网站中显示的像素坐标中的X和Y值，也是监控矩形的右下角，建议比需要监控的画大1-2像素）
